---
name: SDK

"on":
  release:
    types:
      - prereleased
      - released

jobs:
  dotnet:
    name: Publish .NET SDK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup dotnet
        uses: actions/setup-dotnet@v3.0.3
        with:
          dotnet-version: "6.0.x"

      - name: Pack nuget
        working-directory: ./sdk/dotnet
        run: |
          dotnet pack src/AutoTrafficControl/AutoTrafficControl.csproj \
            -c Release \
            -o . \
            -p:Version=${{ github.event.release.name }}

      - name: Push package
        run: |
          dotnet nuget push AutoTrafficControl.${{ github.event.release.name }}.nupkg \
            -k ${{ secrets.NUGET_TOKEN }} \
            -s https://api.nuget.org/v3/index.json \
            --skip-duplicate

  java:
    name: Publish Java SDK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      - name: Run Gradle build
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.5
          arguments: clean build
          build-root-directory: sdk/java

  node:
    name: Publish Node SDK
    runs-on: ubuntu-latest

    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

    steps:
      - name: Set up Protoc
        uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Print version of protoc
        run: protoc --version

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm
          cache-dependency-path: sdk/node/package-lock.json

      - name: Install Buf dependencies
        run: npm install -g grpc_tools_node_protoc_ts grpc-tools

      - name: Set up Buf
        uses: bufbuild/buf-setup-action@v1.13.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Buf
        working-directory: api
        run: buf generate

      - name: Install dependencies
        working-directory: ./sdk/node
        run: npm install

      - name: Authenticate using a token
        working-directory: ./sdk/node
        run: echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > .npmrc

      - name: Build Node client
        working-directory: ./sdk/node
        run: npm run build

      - name: Publish to npm
        working-directory: ./sdk/node
        run: npm publish

  ruby:
    name: Publish Ruby SDK
    runs-on: ubuntu-latest

    steps:
      - name: Set up Protoc
        uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Print version of protoc
        run: protoc --version

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Buf
        uses: bufbuild/buf-setup-action@v1.13.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Buf dependencies
        run: npm install -g grpc_tools_node_protoc_ts grpc-tools

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.0"
          bundler-cache: true

      - name: Generate Ruby bindings
        working-directory: ./api
        run: buf generate

      - name: Install SDK dependencies
        working-directory: ./sdk/ruby
        run: bundle install

      - name: Build gem
        working-directory: ./sdk/ruby
        run: bundle exec rake build

      - name: Set up authentication for rubygems.org
        uses: fac/ruby-gem-setup-credentials-action@v2
        with:
          user: ""
          key: rubygems
          token: ${{ secrets.RUBYGEMS_TOKEN }}

      - name: Push gem to rubygems.org
        uses: fac/ruby-gem-push-action@v2
        with:
          key: rubygems

  rust:
    name: Publish Rust SDK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache build artifacts
        uses: swatinem/rust-cache@v2.2.0

      - name: Publish to crates.io
        working-directory: sdk/rust
        run: cargo publish --token ${{ secrets.CRATES_TOKEN }} -v --all-features
