---
name: SDK

"on":
  release:
    types:
      - prereleased
      - released

jobs:
  node:
    name: Node
    runs-on: ubuntu-latest

    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

    steps:
      - name: Set up Protoc
        uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Print version of protoc
        run: protoc --version

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm
          cache-dependency-path: sdk/node/package-lock.json

      - name: Install Buf dependencies
        run: npm install -g grpc_tools_node_protoc_ts grpc-tools

      - name: Set up Buf
        uses: bufbuild/buf-setup-action@v1.7.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Buf
        working-directory: api
        run: buf generate

      - name: Install dependencies
        working-directory: ./sdk/node
        run: npm install

      - name: Authenticate using a token
        working-directory: ./sdk/node
        run: echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > .npmrc

      - name: Build Node client
        working-directory: ./sdk/node
        run: npm run build

      - name: Publish to npm
        working-directory: ./sdk/node
        run: npm publish

  rust:
    name: Publish Rust SDK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cache build artifacts
        uses: swatinem/rust-cache@v2.0.0

      - name: Publish to crates.io
        working-directory: sdk/rust
        run: cargo publish --token ${{ secrets.CRATES_TOKEN }} -v --all-features

  dotnet:
    name: Publish dotnet SDK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1.9.0
        with:
          dotnet-version: '6.0.x'

      - name: Pack nuget
        working-directory: ./sdk/dotnet
        run: |
          dotnet pack src/AutoTrafficControl/AutoTrafficControl.csproj \
            -c Release \
            -o . \
            -p:Version=${{ github.event.release.name }}

      - name: Push package
        run: |
          dotnet nuget push AutoTrafficControl.${{ github.event.release.name }}.nupkg \
            -k ${{ secrets.NUGET_TOKEN }} \
            -s https://api.nuget.org/v3/index.json \
            --skip-duplicate
