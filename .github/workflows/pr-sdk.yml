---
name: SDK

"on":
  pull_request:
    paths:
      - ".github/workflows/pr-sdk.yml"
      - "api/**"
      - "examples/**"
      - "sdk/**"
      - "utilities/test-server/**"

env:
  CARGO_INCREMENTAL: 0
  CARGO_PROFILE_TEST_DEBUG: 0

jobs:
  node-sdk:
    name: Build Node SDK
    runs-on: ubuntu-latest

    steps:
      - name: Set up Protoc
        uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Print version of protoc
        run: protoc --version

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm
          cache-dependency-path: sdk/node/package-lock.json

      - name: Install Buf dependencies
        run: npm install -g grpc_tools_node_protoc_ts grpc-tools

      - name: Set up Buf
        uses: bufbuild/buf-setup-action@v1.5.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Buf
        working-directory: api
        run: buf generate

      - name: Install dependencies
        working-directory: ./sdk/node
        run: npm install

      - name: Build Node client
        working-directory: ./sdk/node
        run: npm run build

      - name: Upload Node SDK
        uses: actions/upload-artifact@v3
        with:
          name: node-sdk
          path: sdk/node/**

  test-server:
    name: Build test server
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cache build artifacts
        uses: swatinem/rust-cache@v1.4.0

      - name: Compile test-server
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: -p test-server

      - name: Upload test-server
        uses: actions/upload-artifact@v3
        with:
          name: test-server
          path: target/debug/test-server

  javascript:
    name: Test JavaScript bot
    runs-on: ubuntu-latest

    needs:
      - node-sdk
      - test-server

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm
          cache-dependency-path: examples/javascript/package-lock.json

      - name: Download Node SDK
        uses: actions/download-artifact@v3
        with:
          name: node-sdk
          path: sdk/node

      - name: Install dependencies
        working-directory: ./examples/javascript
        run: npm install

      - name: Download test-server
        uses: actions/download-artifact@v3
        with:
          name: test-server
          path: bin

      - name: Set permissions for test-server
        run: chmod +x bin/test-server

      - name: Start test-server
        run: bin/test-server &

      - name: Run JavaScript example
        working-directory: ./examples/javascript
        run: npm start

  rust:
    name: Test Rust bot
    runs-on: ubuntu-latest

    needs: test-server

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cache build artifacts
        uses: swatinem/rust-cache@v1.4.0

      - name: Compile Rust example
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: -p auto-traffic-control-example

      - name: Download test-server
        uses: actions/download-artifact@v3
        with:
          name: test-server
          path: bin

      - name: Set permissions for test-server
        run: chmod +x bin/test-server

      - name: Start test-server
        run: bin/test-server &

      - name: Run Rust example
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: -p auto-traffic-control-example

  typescript:
    name: Test TypeScript bot
    runs-on: ubuntu-latest

    needs:
      - node-sdk
      - test-server

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm
          cache-dependency-path: examples/typescript/package-lock.json

      - name: Download Node SDK
        uses: actions/download-artifact@v3
        with:
          name: node-sdk
          path: sdk/node

      - name: Install dependencies
        working-directory: ./examples/typescript
        run: npm install

      - name: Download test-server
        uses: actions/download-artifact@v3
        with:
          name: test-server
          path: bin

      - name: Set permissions for test-server
        run: chmod +x bin/test-server

      - name: Start test-server
        run: bin/test-server &

      - name: Run JavaScript example
        working-directory: ./examples/typescript
        run: npm start
