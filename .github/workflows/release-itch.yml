---
name: itch.io

"on":
  release:
    types:
      - prereleased
      - released

env:
  itch_project: jdno/auto-traffic-control

jobs:
  linux:
    name: Publish Linux build
    runs-on: ubuntu-latest

    steps:
      - name: Install system dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y \
          libx11-dev \
          libasound2-dev \
          libudev-dev

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache build artifacts
        uses: swatinem/rust-cache@v2.5.0

      - name: Build release artifact
        run: cargo build --release

      - name: Create distribution folder
        run: mkdir ./dist

      - name: Copy release artifact into distribution folder
        run: cp target/release/auto-traffic-control-game ./dist/auto-traffic-control

      - name: Copy assets into distribution folder
        run: cp -r game/assets ./dist/assets

      - name: Set version
        run: echo "version=${{ github.event.release.name }}" >> $GITHUB_ENV

      - name: Set beta channel
        if: github.event.action == 'prereleased'
        run: echo "itch_channel=linux-beta" >> $GITHUB_ENV

      - name: Set release channel
        if: github.event.action == 'released'
        run: echo "itch_channel=linux-stable" >> $GITHUB_ENV

      - name: Set up butler
        uses: jdno/setup-butler@v1

      - name: Publish game to itch.io
        run: |
          butler push dist ${{ env.itch_project }}:${{ env.itch_channel }} --userversion ${{ env.version }}
        env:
          BUTLER_API_KEY: ${{ secrets.ITCHIO_API_KEY }}

  macos:
    name: Publish macOS build
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache build artifacts
        uses: swatinem/rust-cache@v2.5.0

      - name: Install cargo-bundle
        run: cargo install cargo-bundle

      - name: Build release artifact
        working-directory: game
        run: cargo bundle --release

      - name: Move assets to binary
        working-directory: target/release/bundle/osx/Auto Traffic Control.app
        run: cp -r Contents/Resources/assets Contents/MacOS/assets

      - name: Set version
        run: echo "version=${{ github.event.release.name }}" >> $GITHUB_ENV

      - name: Set beta channel
        if: github.event.action == 'prereleased'
        run: echo "itch_channel=macos-beta" >> $GITHUB_ENV

      - name: Set release channel
        if: github.event.action == 'released'
        run: echo "itch_channel=macos-stable" >> $GITHUB_ENV

      - name: Set up butler
        uses: jdno/setup-butler@v1

      - name: Publish game to itch.io
        run: |
          butler push target/release/bundle/osx ${{ env.itch_project }}:${{ env.itch_channel }} --userversion ${{ env.version }}
        env:
          BUTLER_API_KEY: ${{ secrets.ITCHIO_API_KEY }}

  windows:
    name: Publish Windows build
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache build artifacts
        uses: swatinem/rust-cache@v2.5.0

      - name: Build release artifact
        run: cargo build --release

      - name: Create distribution folder
        run: mkdir ./dist

      - name: Copy release artifact into distribution folder
        run: cp target/release/auto-traffic-control-game.exe ./dist/auto-traffic-control.exe

      - name: Copy assets into distribution folder
        run: cp -r game/assets ./dist/assets

      - name: Set version
        run: echo "version=${{ github.event.release.name }}" >> $env:GITHUB_ENV

      - name: Set beta channel
        if: github.event.action == 'prereleased'
        run: echo "itch_channel=windows-beta" >> $env:GITHUB_ENV

      - name: Set release channel
        if: github.event.action == 'released'
        run: echo "itch_channel=windows-stable" >> $env:GITHUB_ENV

      - name: Set up butler
        uses: jdno/setup-butler@v1

      - name: Publish game to itch.io
        run: |
          butler push dist ${{ env.itch_project }}:${{ env.itch_channel }} --userversion ${{ env.version }}
        env:
          BUTLER_API_KEY: ${{ secrets.ITCHIO_API_KEY }}
