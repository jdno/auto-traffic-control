"use strict";(self.webpackChunkauto_traffic_control=self.webpackChunkauto_traffic_control||[]).push([[405],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=p(n),d=a,f=m["".concat(c,".").concat(d)]||m[d]||l[d]||o;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3641:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return l}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],s={title:"Game"},c="GameService",p={unversionedId:"api/Services/game-service",id:"api/Services/game-service",title:"Game",description:"The GameService can be used to start a new game or to query the status of the",source:"@site/docs/api/Services/game-service.md",sourceDirName:"api/Services",slug:"/api/Services/game-service",permalink:"/docs/api/Services/game-service",editUrl:"https://github.com/jdno/auto-traffic-control/tree/main/docs/docs/api/Services/game-service.md",tags:[],version:"current",frontMatter:{title:"Game"},sidebar:"api",previous:{title:"Event",permalink:"/docs/api/Services/event-service"},next:{title:"Map",permalink:"/docs/api/Services/map-service"}},u={},l=[{value:"Get Game",id:"get-game",level:2},{value:"Request",id:"request",level:3},{value:"Response",id:"response",level:3},{value:"Start Game",id:"start-game",level:2},{value:"Request",id:"request-1",level:3},{value:"Response",id:"response-1",level:3}],m={toc:l};function d(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"gameservice"},(0,o.kt)("inlineCode",{parentName:"h1"},"GameService")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"GameService")," can be used to start a new game or to query the status of the\ncurrent game session."),(0,o.kt)("h2",{id:"get-game"},"Get Game"),(0,o.kt)("p",null,"The state of the current game session can be queried with the ",(0,o.kt)("inlineCode",{parentName:"p"},"GetGame")," request."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-protobuf"},"rpc GetGameState(GetGameStateRequest) returns (GetGameStateResponse);\n")),(0,o.kt)("h3",{id:"request"},"Request"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-protobuf"},"message GetGameStateRequest {}\n")),(0,o.kt)("h3",{id:"response"},"Response"),(0,o.kt)("p",null,"The response contains the ",(0,o.kt)("inlineCode",{parentName:"p"},"game_state"),", which can be either ",(0,o.kt)("inlineCode",{parentName:"p"},"ready")," or\n",(0,o.kt)("inlineCode",{parentName:"p"},"running"),". When the game state is ",(0,o.kt)("inlineCode",{parentName:"p"},"ready"),", no game session is currently running\nand the player is either in the ",(0,o.kt)("em",{parentName:"p"},"main menu")," or in the ",(0,o.kt)("em",{parentName:"p"},"game over")," screen."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-protobuf"},"message GetGameStateResponse {\n  enum GameState {\n    GAME_STATE_UNSPECIFIED = 0;\n    GAME_STATE_READY = 1;\n    GAME_STATE_RUNNING = 2;\n  }\n  GameState game_state = 1;\n}\n")),(0,o.kt)("h2",{id:"start-game"},"Start Game"),(0,o.kt)("p",null,"A new game session can be started by calling the ",(0,o.kt)("inlineCode",{parentName:"p"},"StartGame")," endpoint of the\n",(0,o.kt)("inlineCode",{parentName:"p"},"GameService"),". If a game is already running, nothing will happen."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-protobuf"},"rpc StartGame(StartGameRequest) returns (StartGameResponse);\n")),(0,o.kt)("h3",{id:"request-1"},"Request"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-protobuf"},"message StartGameRequest {}\n")),(0,o.kt)("h3",{id:"response-1"},"Response"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-protobuf"},"message StartGameResponse {}\n")))}d.isMDXComponent=!0}}]);