"use strict";(self.webpackChunkauto_traffic_control=self.webpackChunkauto_traffic_control||[]).push([[239],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),d=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(p.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=d(n),f=o,m=u["".concat(p,".").concat(f)]||u[f]||l[f]||a;return n?r.createElement(m,i(i({ref:t},c),{},{components:n})):r.createElement(m,i({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var d=2;d<a;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8613:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return f},frontMatter:function(){return s},metadata:function(){return d},toc:function(){return l}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],s={},p="Coordinates",d={unversionedId:"coordinates",id:"coordinates",title:"Coordinates",description:"The games uses two different coordinate systems for two different purposes:",source:"@site/docs/coordinates.md",sourceDirName:".",slug:"/coordinates",permalink:"/docs/coordinates",draft:!1,editUrl:"https://github.com/jdno/auto-traffic-control/tree/main/docs/docs/coordinates.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Rules",permalink:"/docs/rules"}},c={},l=[{value:"Coordinate System",id:"coordinate-system",level:2},{value:"Routing Grid",id:"routing-grid",level:2}],u={toc:l};function f(e){var t=e.components,s=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},u,s,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"coordinates"},"Coordinates"),(0,a.kt)("p",null,"The games uses two different coordinate systems for two different purposes:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("em",{parentName:"li"},"position")," of an airplane on the map is represented by a\n",(0,a.kt)("a",{parentName:"li",href:"/docs/api/types#point"},(0,a.kt)("inlineCode",{parentName:"a"},"Point")),"."),(0,a.kt)("li",{parentName:"ul"},"The flight plan of an airplane is a list of ",(0,a.kt)("a",{parentName:"li",href:"/docs/api/types#node"},(0,a.kt)("inlineCode",{parentName:"a"},"Nodes"))," on\na routing grid.")),(0,a.kt)("p",null,"Both systems are described in more detail below."),(0,a.kt)("h2",{id:"coordinate-system"},"Coordinate System"),(0,a.kt)("p",null,"The ",(0,a.kt)("em",{parentName:"p"},"coordinate system")," is used to describe the position of entities on the map.\nIt uses the ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/types#point"},(0,a.kt)("inlineCode",{parentName:"a"},"Point"))," type, which has an ",(0,a.kt)("inlineCode",{parentName:"p"},"x")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"y"),"\nfield. Every pixel in the game can be addressed with a ",(0,a.kt)("inlineCode",{parentName:"p"},"Point"),"."),(0,a.kt)("p",null,"The origin of the coordinate system is at the center of the map. The x-axis goes\nfrom left to right, and the y-axis goes from the bottom to the top."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"coordinate system",src:n(8895).Z,width:"1824",height:"1560"})),(0,a.kt)("h2",{id:"routing-grid"},"Routing Grid"),(0,a.kt)("p",null,"Airplanes are routed along the ",(0,a.kt)("em",{parentName:"p"},"routing grid"),". The grid consists of\n",(0,a.kt)("a",{parentName:"p",href:"/docs/api/types#node"},(0,a.kt)("inlineCode",{parentName:"a"},"Nodes"))," that are distributed in an even pattern across\nthe map. The following screenshots highlights the nodes that form the routing\ngrid in red."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"routing grid",src:n(447).Z,width:"1824",height:"1560"})),(0,a.kt)("p",null,"The routing grid is part of the ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/types#map"},(0,a.kt)("inlineCode",{parentName:"a"},"Map")),", and can be queried\nthrough the ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/Services/map-service"},(0,a.kt)("inlineCode",{parentName:"a"},"MapService")),"."),(0,a.kt)("p",null,"Every ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/types#node"},(0,a.kt)("inlineCode",{parentName:"a"},"Nodes"))," has a field called ",(0,a.kt)("inlineCode",{parentName:"p"},"restricted")," which\nindicates whether an airplane can pass through it. In the screenshot above, the\nnodes around the airport are ",(0,a.kt)("inlineCode",{parentName:"p"},"restricted"),", and are thus not rendered on the map."),(0,a.kt)("p",null,"Airplanes fly from node to node. While in flight, their position is described by\na ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/types#point"},(0,a.kt)("inlineCode",{parentName:"a"},"Point")),". But their fligh plan, i.e. their ",(0,a.kt)("em",{parentName:"p"},"route"),", is\nrepresented by a list of ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/types#node"},(0,a.kt)("inlineCode",{parentName:"a"},"Nodes")),"."),(0,a.kt)("p",null,"Since the routing grid overlays the map, the position of every\n",(0,a.kt)("a",{parentName:"p",href:"/docs/api/types#node"},(0,a.kt)("inlineCode",{parentName:"a"},"Node"))," can be converted to a\n",(0,a.kt)("a",{parentName:"p",href:"/docs/api/types#point"},(0,a.kt)("inlineCode",{parentName:"a"},"Point"))," in the ",(0,a.kt)("a",{parentName:"p",href:"#coordinate-system"},"coordinate system"),".\nSee the documentation of the ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/Services/map-service"},(0,a.kt)("inlineCode",{parentName:"a"},"MapService"))," for\nmore information."))}f.isMDXComponent=!0},8895:function(e,t,n){t.Z=n.p+"assets/images/coordinate-system-1132ff125e5f41c34e4f0062212d3046.png"},447:function(e,t,n){t.Z=n.p+"assets/images/routing-grid-642d5770eca7e2f1480562f1c7ed0599.png"}}]);