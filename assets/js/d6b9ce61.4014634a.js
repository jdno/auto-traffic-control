"use strict";(self.webpackChunkauto_traffic_control=self.webpackChunkauto_traffic_control||[]).push([[909],{3905:function(t,e,n){n.d(e,{Zo:function(){return c},kt:function(){return m}});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function p(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},o=Object.keys(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var l=a.createContext({}),s=function(t){var e=a.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},c=function(t){var e=s(t.components);return a.createElement(l.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},d=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,o=t.originalType,l=t.parentName,c=p(t,["components","mdxType","originalType","parentName"]),d=s(n),m=r,h=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(h,i(i({ref:e},c),{},{components:n})):a.createElement(h,i({ref:e},c))}));function m(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=n.length,i=new Array(o);i[0]=d;var p={};for(var l in e)hasOwnProperty.call(e,l)&&(p[l]=e[l]);p.originalType=t,p.mdxType="string"==typeof t?t:r,i[1]=p;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2914:function(t,e,n){n.r(e),n.d(e,{assets:function(){return c},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return p},metadata:function(){return s},toc:function(){return u}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],p={sidebar_position:3},l="Setting up TypeScript",s={unversionedId:"tutorial/typescript",id:"tutorial/typescript",title:"Setting up TypeScript",description:"In this tutorial, we will use [TypeScript] to implement our bot.",source:"@site/docs/tutorial/typescript.md",sourceDirName:"tutorial",slug:"/tutorial/typescript",permalink:"/docs/tutorial/typescript",editUrl:"https://github.com/jdno/auto-traffic-control/tree/main/docs/docs/tutorial/typescript.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docs",previous:{title:"Installing the Game",permalink:"/docs/tutorial/installation"},next:{title:"Getting the SDK",permalink:"/docs/tutorial/sdk"}},c={},u=[{value:"Setting up a new project",id:"setting-up-a-new-project",level:2},{value:"Adding TypeScript",id:"adding-typescript",level:2},{value:"Creating the script",id:"creating-the-script",level:2},{value:"Running the script",id:"running-the-script",level:2}],d={toc:u};function m(t){var e=t.components,n=(0,r.Z)(t,i);return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"setting-up-typescript"},"Setting up TypeScript"),(0,o.kt)("p",null,"In this tutorial, we will use ",(0,o.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/"},"TypeScript")," to implement our bot."),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The tutorial assumes that you already have ",(0,o.kt)("a",{parentName:"p",href:"https://nodejs.org/"},"Node.js")," and\n",(0,o.kt)("a",{parentName:"p",href:"https://npmjs.com"},"npm")," installed on your machine."))),(0,o.kt)("p",null,"If you want to use a different programming language, check out the\n",(0,o.kt)("a",{parentName:"p",href:"/docs#download-the-client-library"},"Quickstart")," guide for a list of officially\nsupported programming languages. If you're missing your language of choice, you\ncan probably generate API bindings from the game's ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/jdno/auto-traffic-control/tree/main/api"},"Protocol Buffers"),"\nyourself. However, this is not covered by this tutorial."),(0,o.kt)("h2",{id:"setting-up-a-new-project"},"Setting up a new project"),(0,o.kt)("p",null,"First, let's start by setting up a new project."),(0,o.kt)("p",null,"Create a new directory for the project at a location of your choosing. Then\nopen a terminal, ",(0,o.kt)("inlineCode",{parentName:"p"},"cd")," into the new directory, and run the following command to\nget started:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"npm init -y\n")),(0,o.kt)("p",null,"Open the newly created ",(0,o.kt)("inlineCode",{parentName:"p"},"package.json")," file and review its contents. Feel free to\ngive your bot a funky name, and change anything else that doesn't suit your\nneeds."),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"We recommend that you use a version control system like ",(0,o.kt)("a",{parentName:"p",href:"https://git-scm.com/"},"Git")," for your bot so\nthat you can try out different ideas easily."))),(0,o.kt)("h2",{id:"adding-typescript"},"Adding TypeScript"),(0,o.kt)("p",null,"We'll follow the ",(0,o.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/download"},"instructions")," of\n",(0,o.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/"},"TypeScript")," to add it to the project, and add it as a dependency to our\nproject:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"npm install --save-dev typescript\n")),(0,o.kt)("p",null,"We also want to add ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/TypeStrong/ts-node"},(0,o.kt)("inlineCode",{parentName:"a"},"ts-node"))," as a dependency. With ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/TypeStrong/ts-node"},(0,o.kt)("inlineCode",{parentName:"a"},"ts-node")),", we can run\nthe bot without having to first compile the code to JavaScript. You'll see what\nthat means in a second. First, add it as a dependency:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"npm install --save-dev ts-node\n")),(0,o.kt)("h2",{id:"creating-the-script"},"Creating the script"),(0,o.kt)("p",null,"For now, we'll create a simple script that we can run and that'll\nprint ",(0,o.kt)("inlineCode",{parentName:"p"},"Hello, World!")," to the command-line. It's enough to prove\nthat ",(0,o.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/"},"TypeScript")," is working,\nwithout overwhelming us at this point with other challenges."),(0,o.kt)("p",null,"Inside the project folder, create a new directory called ",(0,o.kt)("inlineCode",{parentName:"p"},"src"),". In there, create\na file called ",(0,o.kt)("inlineCode",{parentName:"p"},"main.ts"),". At this point, your directory structure should look\nlike this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},".\n\u251c\u2500\u2500 node_modules\n\u2502   \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 package-lock.json\n\u251c\u2500\u2500 package.json\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 main.ts\n")),(0,o.kt)("p",null,"Open ",(0,o.kt)("inlineCode",{parentName:"p"},"src/main.ts"),", and add the following content:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'function main() {\n  console.log("Hello, World!");\n}\n\nmain();\n')),(0,o.kt)("p",null,"That's it for now. Let's run the script."),(0,o.kt)("h2",{id:"running-the-script"},"Running the script"),(0,o.kt)("p",null,"Thanks to ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/TypeStrong/ts-node"},(0,o.kt)("inlineCode",{parentName:"a"},"ts-node")),", we can run the script without having to compile it to\nJavaScript first."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"$ npx ts-node src/main.ts\nHello, World!\n")),(0,o.kt)("p",null,"We can make it a bit easier to run the script, though. Let's open up\n",(0,o.kt)("inlineCode",{parentName:"p"},"package.json"),", and make this command our ",(0,o.kt)("em",{parentName:"p"},"start")," script. Find the ",(0,o.kt)("inlineCode",{parentName:"p"},'"scripts"'),"\nsection in the file, and add the following ",(0,o.kt)("inlineCode",{parentName:"p"},'"start"')," command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "scripts": {\n    "start": "npx ts-node src/main.ts"\n  }\n}\n')),(0,o.kt)("p",null,"We can now run our bot by simply running ",(0,o.kt)("inlineCode",{parentName:"p"},"npm start"),". That's a lot easier to\nremember."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"$ npm start\n\n> node-traffic-controller@0.0.0 start\n> npx ts-node src/main.ts\n\nHello, World!\n")),(0,o.kt)("p",null,"This concludes setting up ",(0,o.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/"},"TypeScript")," in the project. We have a script that we\ncan run, and the next step is adding the game's Node SDK and making an API\nrequest."))}m.isMDXComponent=!0}}]);