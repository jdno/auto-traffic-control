"use strict";(self.webpackChunkauto_traffic_control=self.webpackChunkauto_traffic_control||[]).push([[971],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),c=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),h=c(n),m=r,d=h["".concat(u,".").concat(m)]||h[m]||s[m]||o;return n?a.createElement(d,i(i({ref:t},p),{},{components:n})):a.createElement(d,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=h;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},1269:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>s,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const o={title:"Quickstart"},i="Quickstart",l={unversionedId:"index",id:"index",title:"Quickstart",description:"\ud83d\udc4b Welcome",source:"@site/docs/index.md",sourceDirName:".",slug:"/",permalink:"/docs/",draft:!1,editUrl:"https://github.com/jdno/auto-traffic-control/tree/main/docs/docs/index.md",tags:[],version:"current",frontMatter:{title:"Quickstart"},sidebar:"docs",next:{title:"Introduction",permalink:"/docs/tutorial/"}},u={},c=[{value:"\ud83d\udc4b Welcome",id:"-welcome",level:2},{value:"Install the Game",id:"install-the-game",level:2},{value:"Set Up Your Program",id:"set-up-your-program",level:2},{value:"Rust",id:"rust",level:3},{value:"Download the Client Library",id:"download-the-client-library",level:2},{value:"Connect to the Server",id:"connect-to-the-server",level:2},{value:"Start Playing",id:"start-playing",level:2}],p={toc:c};function s(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"quickstart"},"Quickstart"),(0,r.kt)("h2",{id:"-welcome"},"\ud83d\udc4b Welcome"),(0,r.kt)("p",null,"We're super happy that you're interested in our game."),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"/docs"},"Getting Started")," guide shows you how to install the game, set up a client\nlibrary, and start playing."),(0,r.kt)("p",null,"If you are missing anything in the guide, let us know by opening an issue on\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/jdno/auto-traffic-control"},"GitHub"),"."),(0,r.kt)("h2",{id:"install-the-game"},"Install the Game"),(0,r.kt)("p",null,"The recommended way to install the game is through the ",(0,r.kt)("a",{parentName:"p",href:"https://itch.io"},"itch.io")," app, which runs\non Linux, macOS, and Windows. You will get updates for the game through the app\nas well, making it super easy to play the best\u2122 version of the game."),(0,r.kt)("iframe",{src:"https://itch.io/embed/1463989?link_color=56a9de",width:"552",height:"167",frameborder:"0"},(0,r.kt)("a",{href:"https://jdno.itch.io/auto-traffic-control"},"Auto Traffic Control by jdno")),(0,r.kt)("h2",{id:"set-up-your-program"},"Set Up Your Program"),(0,r.kt)("p",null,"When designing ",(0,r.kt)("strong",{parentName:"p"},"Auto Traffic Control"),", we wanted to give you maximum freedom\nover your own code. Which means this getting started guide can only show you an\nexample that you can copy, tweak, or ignore. Whatever you choose to do, the goal\nof this step is to set up a runnable program."),(0,r.kt)("p",null,"Below is an example for getting started with Rust."),(0,r.kt)("h3",{id:"rust"},"Rust"),(0,r.kt)("p",null,"Creating an executable program in Rust is as simple as running ",(0,r.kt)("inlineCode",{parentName:"p"},"cargo"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"cargo new my-atc-program\n")),(0,r.kt)("p",null,"You can then ",(0,r.kt)("inlineCode",{parentName:"p"},"cd")," into the newly created directory and run the program with:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"cargo run\n")),(0,r.kt)("h2",{id:"download-the-client-library"},"Download the Client Library"),(0,r.kt)("p",null,"The game provides an API that you can use to query the state of the game and\nissue commands. The API is built with ",(0,r.kt)("a",{parentName:"p",href:"https://grpc.io/"},"gRPC"),", and any programming language that\nsupports gRPC can be used to play the game."),(0,r.kt)("p",null,"We publish official client libraries for the following languages. Simply add the\npackage as a dependency to your project."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Language"),(0,r.kt)("th",{parentName:"tr",align:null},"Package"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Node"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.npmjs.com/package/auto-traffic-control"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/npm/v/auto-traffic-control",alt:"npm"})))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Rust"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://crates.io/crates/auto-traffic-control"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/crates/v/auto-traffic-control",alt:"Crates.io"})))))),(0,r.kt)("p",null,"Missing your preferred programming language? ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/jdno/auto-traffic-control"},"Open an issue on GitHub"),"\nto let us know. Or use the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/jdno/auto-traffic-control/tree/main/api"},"Protocol Buffers")," to generate your own\nbindings."),(0,r.kt)("h2",{id:"connect-to-the-server"},"Connect to the Server"),(0,r.kt)("p",null,"When you start the game, it runs a ",(0,r.kt)("a",{parentName:"p",href:"https://grpc.io/"},"gRPC")," server in the background. You can\nconnect to the server at the following address:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"http://localhost:4747\n")),(0,r.kt)("p",null,"How you create a gRPC client depends on the programming language and library\nthat you are using. Check out their documentation for instructions. In ",(0,r.kt)("inlineCode",{parentName:"p"},"Rust"),",\nit might look like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let mut game_service = GameServiceClient::connect("http://localhost:4747").await?;\n')),(0,r.kt)("h2",{id:"start-playing"},"Start Playing"),(0,r.kt)("p",null,"Now that you have an executable program, a client library for th ",(0,r.kt)("a",{parentName:"p",href:"https://grpc.io/"},"gRPC")," API, and\na connection to the server, you can start playing the game by sending the\n",(0,r.kt)("inlineCode",{parentName:"p"},"StartGame")," request."),(0,r.kt)("p",null,"Have fun exploring the game!"))}s.isMDXComponent=!0}}]);