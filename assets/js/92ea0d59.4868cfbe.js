"use strict";(self.webpackChunkauto_traffic_control=self.webpackChunkauto_traffic_control||[]).push([[177],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,u=d["".concat(l,".").concat(m)]||d[m]||h[m]||i;return n?a.createElement(u,o(o({ref:t},c),{},{components:n})):a.createElement(u,o({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2568:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return h}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=["components"],s={sidebar_position:4},l="Getting the SDK",p={unversionedId:"tutorial/sdk",id:"tutorial/sdk",title:"Getting the SDK",description:"Now that we have a program that we can run, it's time to integrate the game's",source:"@site/docs/tutorial/sdk.md",sourceDirName:"tutorial",slug:"/tutorial/sdk",permalink:"/docs/tutorial/sdk",editUrl:"https://github.com/jdno/auto-traffic-control/tree/main/docs/docs/tutorial/sdk.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"docs",previous:{title:"Setting up TypeScript",permalink:"/docs/tutorial/typescript"},next:{title:"Starting a Game",permalink:"/docs/tutorial/game"}},c={},h=[{value:"Adding the npm package",id:"adding-the-npm-package",level:2},{value:"Initializing the client",id:"initializing-the-client",level:2},{value:"Getting the version",id:"getting-the-version",level:2},{value:"Handling errors",id:"handling-errors",level:3},{value:"Unpacking the response",id:"unpacking-the-response",level:3},{value:"Calling the API",id:"calling-the-api",level:2}],d={toc:h};function m(e){var t=e.components,s=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},d,s,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"getting-the-sdk"},"Getting the SDK"),(0,i.kt)("p",null,"Now that we have a program that we can run, it's time to integrate the game's\nAPI."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Auto Traffic Control")," uses the ",(0,i.kt)("a",{parentName:"p",href:"https://grpc.io/"},"gRPC")," framework to provide a well-defined and\neasy-to-use API to players. One feature of ",(0,i.kt)("a",{parentName:"p",href:"https://grpc.io/"},"gRPC")," is that API clients can be\nauto-generated from the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/jdno/auto-traffic-control/tree/main/api"},"schema definitions")," of the API. These clients hide the\ninternal details of ",(0,i.kt)("a",{parentName:"p",href:"https://grpc.io/"},"gRPC"),", and give you a high-level interface for interacting\nwith the game."),(0,i.kt)("p",null,"We publish these auto-generated client libraries for the most popular languages,\nand call them our ",(0,i.kt)("inlineCode",{parentName:"p"},"software development kits")," (SDKs)."),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The ",(0,i.kt)("a",{parentName:"p",href:"/docs/api"},"API documentation")," provides an overview of the different data\ntypes, services, and endpoints of the API."))),(0,i.kt)("h2",{id:"adding-the-npm-package"},"Adding the npm package"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Auto Traffic Control's")," SDK for the Node ecosystem is called available as a\nnpm package. Click the badge below to open the package on ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/auto-traffic-control"},"npmjs.com"),":"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/auto-traffic-control"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/npm/v/auto-traffic-control",alt:"npm package"}))),(0,i.kt)("p",null,"As you can see on ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/auto-traffic-control"},"npmjs.com"),", you can add the package as a dependency to your\nproject with the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"npm install auto-traffic-control\n")),(0,i.kt)("h2",{id:"initializing-the-client"},"Initializing the client"),(0,i.kt)("p",null,"The game's API is divided into different ",(0,i.kt)("em",{parentName:"p"},"services"),", which have their own area\nof responsibility. For a quick proof-of-concept, we're going to call the\n",(0,i.kt)("a",{parentName:"p",href:"/docs/api/Services/atc-service"},(0,i.kt)("inlineCode",{parentName:"a"},"AtcService"))," to\n",(0,i.kt)("a",{parentName:"p",href:"/docs/api/Services/atc-service#get-version"},"query the version")," of the game."),(0,i.kt)("p",null,"Open ",(0,i.kt)("inlineCode",{parentName:"p"},"src/main.ts"),", and remove the following line from the ",(0,i.kt)("inlineCode",{parentName:"p"},"main")," function:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},'console.log("Hello, World!");\n')),(0,i.kt)("p",null,"Let's start by initializing the ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/Services/atc-service"},(0,i.kt)("inlineCode",{parentName:"a"},"AtcService")),". The SDK contains the\n",(0,i.kt)("inlineCode",{parentName:"p"},"AtcServiceClient"),", which can be used to connect to the service. Pass in the\n",(0,i.kt)("a",{parentName:"p",href:"/docs/api#address"},"address")," of the game server, and call the helper method\n",(0,i.kt)("inlineCode",{parentName:"p"},"getCredentials")," in the SDK to authenticate with the server."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},'function main() {\n  const atcService = new AtcServiceClient("localhost:4747", getCredentials());\n}\n')),(0,i.kt)("p",null,"Depending on your editor or IDE, you will get a ",(0,i.kt)("inlineCode",{parentName:"p"},"TS2304")," error now, because the\nnames ",(0,i.kt)("inlineCode",{parentName:"p"},"AtcServiceClient")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"getCredentials")," cannot be found. We have to import\nthem from the SDK first. Add the following at the top of ",(0,i.kt)("inlineCode",{parentName:"p"},"src/main.ts"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},'import { getCredentials, AtcServiceClient } from "auto-traffic-control";\n')),(0,i.kt)("p",null,"If you run the program with ",(0,i.kt)("inlineCode",{parentName:"p"},"npm start")," now, nothing will happen. You\ninitialized the client, but it only connects to the server when we call one of\nits APIs. Let's do that next."),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Authentication is a core functionality in ",(0,i.kt)("a",{parentName:"p",href:"https://grpc.io/"},"gRPC"),", and the client stubs require\ncredentials. You don't need to worry about this, just remember to get the\ncredentials from the SDK and pass them as the second argument when initializing\na client."))),(0,i.kt)("h2",{id:"getting-the-version"},"Getting the version"),(0,i.kt)("p",null,"If you check the documentation of the ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/Services/atc-service"},(0,i.kt)("inlineCode",{parentName:"a"},"AtcService")),", you will see that it only\nhas a single API\nendpoint: ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/Services/atc-service#get-version"},(0,i.kt)("inlineCode",{parentName:"a"},"getVersion")),".\nYou can actually inspect the generated code inside the SDK to see the full\nmethod definition:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"public getVersion(\n    request: GetVersionRequest,\n    callback: (error: grpc.ServiceError | null, response: GetVersionResponse) => void\n): grpc.ClientUnaryCall;\n")),(0,i.kt)("p",null,"As you can see, this method takes a\n",(0,i.kt)("a",{parentName:"p",href:"/docs/api/Services/atc-service#request"},(0,i.kt)("inlineCode",{parentName:"a"},"GetVersionRequest"))," as its first\nparameter. The second parameter is a callback function that is passed either a\n",(0,i.kt)("inlineCode",{parentName:"p"},"ServiceError")," or\na ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/Services/atc-service#response"},(0,i.kt)("inlineCode",{parentName:"a"},"GetVersionResponse")),"."),(0,i.kt)("p",null,"Let's set up the API call with an empty callback method:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},'function main() {\n  const atcService = new AtcServiceClient("localhost:4747", getCredentials());\n\n  atcService.getVersion(\n    new GetVersionRequest(),\n    (err: ServiceError | null, response: GetVersionResponse) => {}\n  );\n}\n')),(0,i.kt)("p",null,"If your editor or IDE is not already telling you, don't forget to add\n",(0,i.kt)("inlineCode",{parentName:"p"},"ServiceError")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"GetVersionResponse")," to the imports again."),(0,i.kt)("h3",{id:"handling-errors"},"Handling errors"),(0,i.kt)("p",null,"The callback function is passed a ",(0,i.kt)("inlineCode",{parentName:"p"},"ServiceError")," when the API request failed.\nFor example, when the game is not running and the program cannot connect to the\ngame server. If that happens, we want to print the error and abort the program.\nLuckily, we can simply throw an exception to achieve this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"(err: ServiceError | null, response: GetVersionResponse) => {\n  if (err != null) {\n    throw err;\n  }\n};\n")),(0,i.kt)("p",null,"If you run the program with ",(0,i.kt)("inlineCode",{parentName:"p"},"npm start")," now (without having started the game),\nyou will get the following error:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"Error: 14 UNAVAILABLE: No connection established\n")),(0,i.kt)("p",null,"Throwing an exception is not a pretty way to handle the issue, but it's good\nenough for now."),(0,i.kt)("h3",{id:"unpacking-the-response"},"Unpacking the response"),(0,i.kt)("p",null,"If the API request succeeds, the callback gets passed a\n",(0,i.kt)("a",{parentName:"p",href:"/docs/api/Services/atc-service#response"},(0,i.kt)("inlineCode",{parentName:"a"},"GetVersionResponse")),". If you check\nthe ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/Services/atc-service#response"},"documentation"),", you will see that\nthe response has a single field called ",(0,i.kt)("inlineCode",{parentName:"p"},"version"),". The field has the type\n",(0,i.kt)("a",{parentName:"p",href:"/docs/api/types#version"},(0,i.kt)("inlineCode",{parentName:"a"},"Version")),", which has its own entry in the\n",(0,i.kt)("a",{parentName:"p",href:"/docs/api/types#version"},"documentation")," and looks like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-protobuf"},"message Version {\n  uint64 major = 1;\n  uint64 minor = 2;\n  uint64 patch = 3;\n  string pre = 4;\n}\n")),(0,i.kt)("p",null,"A slightly annoying\nbut ",(0,i.kt)("a",{parentName:"p",href:"https://stackoverflow.com/a/31814967"},"sensible decision"),"\nin ",(0,i.kt)("a",{parentName:"p",href:"https://grpc.io/"},"gRPC")," is that fields can be uninitialized, in which case they are set to a\ndefault value. For the ",(0,i.kt)("inlineCode",{parentName:"p"},"version")," field, this means that it can be ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined"),".\nSo let's start by getting the version from the\n",(0,i.kt)("a",{parentName:"p",href:"/docs/api/Services/atc-service#response"},(0,i.kt)("inlineCode",{parentName:"a"},"GetVersionResponse")),", and then check\nif it's set:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},'const version = response.getVersion();\n\nif (version != null) {\n  // TODO\n} else {\n  throw new Error("Requesting the version returned an empty response.");\n}\n')),(0,i.kt)("p",null,"I decided to simply throw an exception again, since the program cannot really do\nanything interesting if the version is empty."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The game always sets every field in a response and an uninitialized value is\nconsidered a bug."))),(0,i.kt)("p",null,"We can now access the fields of the ",(0,i.kt)("inlineCode",{parentName:"p"},"version")," and merge them into a single\nstring that we'll print:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},'if (version != null) {\n  let versionString = [\n    version.getMajor(),\n    version.getMinor(),\n    version.getPatch(),\n  ].join(".");\n\n  if (version.getPre() !== "") {\n    versionString = versionString.concat(version.getPre());\n  }\n\n  console.log(`Auto Traffic Control is running version \'${versionString}\'`);\n} else {\n  throw new Error("Requesting the version returned an empty response.");\n}\n')),(0,i.kt)("h2",{id:"calling-the-api"},"Calling the API"),(0,i.kt)("p",null,"Let's put everything together and make the actual API call. If you followed\nalong, your ",(0,i.kt)("inlineCode",{parentName:"p"},"src/main.ts")," file should now look something like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},'import {\n  getCredentials,\n  AtcServiceClient,\n  GetVersionRequest,\n  GetVersionResponse,\n  ServiceError,\n} from "auto-traffic-control";\n\nfunction main() {\n  const atcService = new AtcServiceClient("localhost:4747", getCredentials());\n\n  atcService.getVersion(\n    new GetVersionRequest(),\n    (err: ServiceError | null, response: GetVersionResponse) => {\n      if (err != null) {\n        throw err;\n      }\n\n      const version = response.getVersion();\n\n      if (version != null) {\n        let versionString = [\n          version.getMajor(),\n          version.getMinor(),\n          version.getPatch(),\n        ].join(".");\n\n        if (version.getPre() !== "") {\n          versionString = versionString.concat(version.getPre());\n        }\n\n        console.log(\n          `Auto Traffic Control is running version \'${versionString}\'`\n        );\n      } else {\n        throw new Error("Requesting the version returned an empty response.");\n      }\n    }\n  );\n}\n\nmain();\n')),(0,i.kt)("p",null,"You can run the file with ",(0,i.kt)("inlineCode",{parentName:"p"},"npm start"),", but you will still get a connection error\nbecause we haven't started the game."),(0,i.kt)("p",null,"Open the ",(0,i.kt)("strong",{parentName:"p"},"itch")," app, go to your library, and open ",(0,i.kt)("strong",{parentName:"p"},"Auto Traffic Control"),".\nHit the ",(0,i.kt)("inlineCode",{parentName:"p"},"Launch")," button in the bottom right, and wait for the game to start."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"screenshot of the itch page for Auto Traffic Control",src:n(8567).Z,width:"1383",height:"830"})),(0,i.kt)("p",null,"With the game open, run ",(0,i.kt)("inlineCode",{parentName:"p"},"npm start"),". The program will connect to the game\nserver, request the game's version, and the print it to the terminal."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"screenshot of a successful API request",src:n(8137).Z,width:"1644",height:"698"})),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"If you get a connection error while the game is running, try disabling the\n",(0,i.kt)("a",{parentName:"p",href:"https://itch.io/docs/itch/using/sandbox.html"},"sandbox")," in ",(0,i.kt)("strong",{parentName:"p"},"itch's"),"\n",(0,i.kt)("a",{parentName:"p",href:"https://itch.io/docs/itch/using/preferences.html"},"preferences"),". It might be\nblocking the incoming connections. Or download the game from ",(0,i.kt)("a",{parentName:"p",href:"https://jdno.itch.io/auto-traffic-control"},"itch.io")," and run\nit as a standalone binary."))),(0,i.kt)("p",null,"Congrats! \ud83e\udd73 You sent your first API request to the game."),(0,i.kt)("p",null,"Now that you know how to use\nthe ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/auto-traffic-control"},"SDK"),"\nand its ",(0,i.kt)("a",{parentName:"p",href:"/docs/api"},"documentation"),", you are all set to start working on an\nactual bot. Check out the ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/Services/game-service"},(0,i.kt)("inlineCode",{parentName:"a"},"GameService"))," and\ntry to start the game. Hint: The ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/Services/game-service"},(0,i.kt)("inlineCode",{parentName:"a"},"GameService"))," has a ",(0,i.kt)("inlineCode",{parentName:"p"},"startGame")," method. \ud83d\ude09"),(0,i.kt)("p",null,"Don't worry if you get stuck. We'll go over it in the next chapter together."))}m.isMDXComponent=!0},8137:function(e,t,n){t.Z=n.p+"assets/images/get-version-329134c10ce5b6e4b9b0d8bfbaab71e2.png"},8567:function(e,t,n){t.Z=n.p+"assets/images/itch-atc-launch-83991ab0fbd9bfdf4ccfdf856a2c6742.png"}}]);