"use strict";(self.webpackChunkauto_traffic_control=self.webpackChunkauto_traffic_control||[]).push([[238],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=s(n),f=a,g=m["".concat(c,".").concat(f)]||m[f]||u[f]||o;return n?r.createElement(g,i(i({ref:t},p),{},{components:n})):r.createElement(g,i({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3906:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return u}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],l={sidebar_position:5},c="Starting a Game",s={unversionedId:"tutorial/game",id:"tutorial/game",title:"Starting a Game",description:"Now that we know how to call Auto Traffic Control's API, starting a game is",source:"@site/docs/tutorial/game.md",sourceDirName:"tutorial",slug:"/tutorial/game",permalink:"/docs/tutorial/game",editUrl:"https://github.com/jdno/auto-traffic-control/tree/main/docs/docs/tutorial/game.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"docs",previous:{title:"Getting the SDK",permalink:"/docs/tutorial/sdk"},next:{title:"Receiving Events",permalink:"/docs/tutorial/events"}},p={},u=[],m={toc:u};function f(e){var t=e.components,l=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},m,l,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"starting-a-game"},"Starting a Game"),(0,o.kt)("p",null,"Now that we know how to call ",(0,o.kt)("strong",{parentName:"p"},"Auto Traffic Control's")," API, starting a game is\nquite straightforward."),(0,o.kt)("p",null,"First, we need to connect to the ",(0,o.kt)("a",{parentName:"p",href:"/docs/api/Services/game-service"},(0,o.kt)("inlineCode",{parentName:"a"},"GameService")),". The clients all work the same,\nso we pretty much only have to change the names from the previous step:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'const gameService = new GameServiceClient("localhost:4747", getCredentials());\n')),(0,o.kt)("p",null,"Then, we want to call\nthe ",(0,o.kt)("a",{parentName:"p",href:"/docs/api/Services/game-service#start-game"},(0,o.kt)("inlineCode",{parentName:"a"},"startGame")),"\nmethod on the ",(0,o.kt)("a",{parentName:"p",href:"/docs/api/Services/game-service"},(0,o.kt)("inlineCode",{parentName:"a"},"GameService")),". We can remove the call to ",(0,o.kt)("inlineCode",{parentName:"p"},"getVersion")," from\n",(0,o.kt)("inlineCode",{parentName:"p"},"src/main.ts"),", and replace it with a call to ",(0,o.kt)("inlineCode",{parentName:"p"},"startGame"),"."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"startGame")," returns an empty response without any data, so we can ignore it in\nour callback. We still want to check the ",(0,o.kt)("inlineCode",{parentName:"p"},"err")," to see if the request succeeded."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"gameService.startGame(new StartGameRequest(), (err: ServiceError | null) => {\n  if (err != null) {\n    throw err;\n  }\n});\n")),(0,o.kt)("p",null,"If the request succeeds, let's just print a message for now."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'console.log("Started a new game. Good luck!");\n')),(0,o.kt)("p",null,"When putting everything together and fixing the missing imports, your\n",(0,o.kt)("inlineCode",{parentName:"p"},"src/main.ts")," file should look similar to this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'import {\n  getCredentials,\n  GameServiceClient,\n  ServiceError,\n  StartGameRequest,\n  StartGameResponse,\n} from "auto-traffic-control";\n\nfunction main() {\n  const gameService = new GameServiceClient("localhost:4747", getCredentials());\n\n  gameService.startGame(new StartGameRequest(), (err: ServiceError | null) => {\n    if (err != null) {\n      throw err;\n    }\n\n    console.log("Started a new game. Good luck!");\n  });\n}\n\nmain();\n')),(0,o.kt)("p",null,"Great, let's start the game and run our program!"),(0,o.kt)("p",null,"Fire up the ",(0,o.kt)("strong",{parentName:"p"},"itch")," app, and launch ",(0,o.kt)("strong",{parentName:"p"},"Auto Traffic Control"),". When the game has\nstarted, run ",(0,o.kt)("inlineCode",{parentName:"p"},"npm start")," to start a new game session. The game will switch to a\nmap view with the airports, and will start spawning planes after a few seconds."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"screenshot",src:n(1048).Z,width:"1824",height:"1560"})),(0,o.kt)("p",null,"Our program is not doing anything yet to control the airplanes, so sooner or\nlater two airplanes will get too close to each other and the game will end. We\nwill look at that in the next chapter."))}f.isMDXComponent=!0},1048:function(e,t,n){t.Z=n.p+"assets/images/screenshot-518b079cc3d40f98ccf1f9d36dafd293.png"}}]);