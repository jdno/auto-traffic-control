"use strict";(self.webpackChunkauto_traffic_control=self.webpackChunkauto_traffic_control||[]).push([[909],{3905:(t,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>m});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function p(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var l=r.createContext({}),s=function(t){var e=r.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},c=function(t){var e=s(t.components);return r.createElement(l.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,o=t.originalType,l=t.parentName,c=p(t,["components","mdxType","originalType","parentName"]),d=s(n),m=a,h=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(h,i(i({ref:e},c),{},{components:n})):r.createElement(h,i({ref:e},c))}));function m(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=n.length,i=new Array(o);i[0]=d;var p={};for(var l in e)hasOwnProperty.call(e,l)&&(p[l]=e[l]);p.originalType=t,p.mdxType="string"==typeof t?t:a,i[1]=p;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2914:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:3},i="Setting up TypeScript",p={unversionedId:"tutorial/typescript",id:"tutorial/typescript",title:"Setting up TypeScript",description:"In this tutorial, we will use [TypeScript] to implement our bot.",source:"@site/docs/tutorial/typescript.md",sourceDirName:"tutorial",slug:"/tutorial/typescript",permalink:"/docs/tutorial/typescript",draft:!1,editUrl:"https://github.com/jdno/auto-traffic-control/tree/main/docs/docs/tutorial/typescript.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docs",previous:{title:"Installing the Game",permalink:"/docs/tutorial/installation"},next:{title:"Getting the SDK",permalink:"/docs/tutorial/sdk"}},l={},s=[{value:"Setting up a new project",id:"setting-up-a-new-project",level:2},{value:"Adding TypeScript",id:"adding-typescript",level:2},{value:"Creating the script",id:"creating-the-script",level:2},{value:"Running the script",id:"running-the-script",level:2}],c={toc:s};function u(t){let{components:e,...n}=t;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"setting-up-typescript"},"Setting up TypeScript"),(0,a.kt)("p",null,"In this tutorial, we will use ",(0,a.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/"},"TypeScript")," to implement our bot."),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"The tutorial assumes that you already have ",(0,a.kt)("a",{parentName:"p",href:"https://nodejs.org/"},"Node.js")," and\n",(0,a.kt)("a",{parentName:"p",href:"https://npmjs.com"},"npm")," installed on your machine.")),(0,a.kt)("p",null,"If you want to use a different programming language, check out the\n",(0,a.kt)("a",{parentName:"p",href:"/docs#download-the-client-library"},"Quickstart")," guide for a list of officially\nsupported programming languages. If you're missing your language of choice, you\ncan probably generate API bindings from the game's ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/jdno/auto-traffic-control/tree/main/api"},"Protocol Buffers"),"\nyourself. However, this is not covered by this tutorial."),(0,a.kt)("h2",{id:"setting-up-a-new-project"},"Setting up a new project"),(0,a.kt)("p",null,"First, let's start by setting up a new project."),(0,a.kt)("p",null,"Create a new directory for the project at a location of your choosing. Then\nopen a terminal, ",(0,a.kt)("inlineCode",{parentName:"p"},"cd")," into the new directory, and run the following command to\nget started:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"npm init -y\n")),(0,a.kt)("p",null,"Open the newly created ",(0,a.kt)("inlineCode",{parentName:"p"},"package.json")," file and review its contents. Feel free to\ngive your bot a funky name, and change anything else that doesn't suit your\nneeds."),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"We recommend that you use a version control system like ",(0,a.kt)("a",{parentName:"p",href:"https://git-scm.com/"},"Git")," for your bot so\nthat you can try out different ideas easily.")),(0,a.kt)("h2",{id:"adding-typescript"},"Adding TypeScript"),(0,a.kt)("p",null,"We'll follow the ",(0,a.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/download"},"instructions")," of\n",(0,a.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/"},"TypeScript")," to add it to the project, and add it as a dependency to our\nproject:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"npm install --save-dev typescript\n")),(0,a.kt)("p",null,"We also want to add ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/TypeStrong/ts-node"},(0,a.kt)("inlineCode",{parentName:"a"},"ts-node"))," as a dependency. With ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/TypeStrong/ts-node"},(0,a.kt)("inlineCode",{parentName:"a"},"ts-node")),", we can run\nthe bot without having to first compile the code to JavaScript. You'll see what\nthat means in a second. First, add it as a dependency:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"npm install --save-dev ts-node\n")),(0,a.kt)("h2",{id:"creating-the-script"},"Creating the script"),(0,a.kt)("p",null,"For now, we'll create a simple script that we can run and that'll\nprint ",(0,a.kt)("inlineCode",{parentName:"p"},"Hello, World!")," to the command-line. It's enough to prove\nthat ",(0,a.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/"},"TypeScript")," is working,\nwithout overwhelming us at this point with other challenges."),(0,a.kt)("p",null,"Inside the project folder, create a new directory called ",(0,a.kt)("inlineCode",{parentName:"p"},"src"),". In there, create\na file called ",(0,a.kt)("inlineCode",{parentName:"p"},"main.ts"),". At this point, your directory structure should look\nlike this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},".\n\u251c\u2500\u2500 node_modules\n\u2502   \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 package-lock.json\n\u251c\u2500\u2500 package.json\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 main.ts\n")),(0,a.kt)("p",null,"Open ",(0,a.kt)("inlineCode",{parentName:"p"},"src/main.ts"),", and add the following content:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'function main() {\n  console.log("Hello, World!");\n}\n\nmain();\n')),(0,a.kt)("p",null,"That's it for now. Let's run the script."),(0,a.kt)("h2",{id:"running-the-script"},"Running the script"),(0,a.kt)("p",null,"Thanks to ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/TypeStrong/ts-node"},(0,a.kt)("inlineCode",{parentName:"a"},"ts-node")),", we can run the script without having to compile it to\nJavaScript first."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ npx ts-node src/main.ts\nHello, World!\n")),(0,a.kt)("p",null,"We can make it a bit easier to run the script, though. Let's open up\n",(0,a.kt)("inlineCode",{parentName:"p"},"package.json"),", and make this command our ",(0,a.kt)("em",{parentName:"p"},"start")," script. Find the ",(0,a.kt)("inlineCode",{parentName:"p"},'"scripts"'),"\nsection in the file, and add the following ",(0,a.kt)("inlineCode",{parentName:"p"},'"start"')," command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "scripts": {\n    "start": "npx ts-node src/main.ts"\n  }\n}\n')),(0,a.kt)("p",null,"We can now run our bot by simply running ",(0,a.kt)("inlineCode",{parentName:"p"},"npm start"),". That's a lot easier to\nremember."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ npm start\n\n> node-traffic-controller@0.0.0 start\n> npx ts-node src/main.ts\n\nHello, World!\n")),(0,a.kt)("p",null,"This concludes setting up ",(0,a.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/"},"TypeScript")," in the project. We have a script that we\ncan run, and the next step is adding the game's Node SDK and making an API\nrequest."))}u.isMDXComponent=!0}}]);